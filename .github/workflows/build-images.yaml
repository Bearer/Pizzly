name: "[Release] Build service images"
on:
    push:
        branches:
            - master
            - staging/**
    pull_request:

concurrency:
    group: pulls/${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    nango-persist:
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: persist
            run-cmd: ts-build
            tags: -t nangohq/nango-persist:${{ github.event.pull_request.head.sha || github.sha }} ${{ github.ref == 'refs/heads/master' && format('-t nangohq/nango-persist:enterprise-{0} -t nangohq/nango-persist:enterprise -t nangohq/nango-persist:hosted-{1} -t nangohq/nango-persist:hosted', github.event.pull_request.head.sha || github.sha, github.event.pull_request.head.sha || github.sha)  || '' }}
    nango-jobs:
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: jobs
            run-cmd: ts-build
            tags: -t nangohq/nango-jobs:${{ github.event.pull_request.head.sha || github.sha }} ${{ github.ref == 'refs/heads/master' && format('-t nangohq/nango-jobs:enterprise-{0} -t nangohq/nango-jobs:enterprise -t nangohq/nango-jobs:hosted-{1} -t nangohq/nango-jobs:hosted', github.event.pull_request.head.sha || github.sha, github.event.pull_request.head.sha || github.sha) || '' }}
    nango-runner:
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: runner
            run-cmd: ts-build
            tags: -t nangohq/nango-runner:${{ github.event.pull_request.head.sha || github.sha }} ${{ github.ref == 'refs/heads/master' && format('-t nangohq/nango-runner:enterprise-{0} -t nangohq/nango-runner:enterprise -t nangohq/nango-runner:hosted-{1} -t nangohq/nango-runner:hosted', github.event.pull_request.head.sha || github.sha, github.event.pull_request.head.sha || github.sha) || '' }}
    nango-server-staging:
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: server
            run-cmd: build:staging
            tags: -t nangohq/nango-server:staging-${{ github.event.pull_request.head.sha || github.sha }}

    nango-server-prod:
        if: github.ref == 'refs/heads/master'
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: server
            run-cmd: build:prod
            tags: -t nangohq/nango-server:production-${{ github.event.pull_request.head.sha || github.sha }}
    nango-server-self-hosted:
        if: github.ref == 'refs/heads/master'
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: server
            run-cmd: build:hosted
            tags: -t nangohq/nango-server:hosted -t nangohq/nango-server:hosted-${{ github.event.pull_request.head.sha || github.sha }}
    nango-server-enterprise:
        if: github.ref == 'refs/heads/master'
        uses: ./.github/workflows/push-container.yaml
        secrets: inherit
        with:
            package: server
            run-cmd: build:enterprise
            tags: -t nangohq/nango-server:enterprise -t nangohq/nango-server:enterprise-${{ github.event.pull_request.head.sha || github.sha }}

    test-image-server:
        needs: [nango-server-staging, nango-persist, nango-jobs, nango-runner]
        services:
            nango-db:
              image: postgres:15.5-alpine
              env:
                POSTGRES_PASSWORD: nango
                POSTGRES_USER: nango
                POSTGRES_DB: nango
              options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

            temporal:
              image: temporalio/auto-setup
              env:
                DB: nango-db
                DB_PORT: 5432
                POSTGRES_USER: nango
                POSTGRES_PWD: nango
                POSTGRES_SEEDS: nango-db
              ports:
                  - 7233:7233

            server:
                image: nangohq/nango-server:staging-${{ github.event.pull_request.head.sha || github.sha }}
                env:
                    SERVER_PORT: 3001
                ports:
                  - 3001:3001
                options: >-
                  --health-cmd "curl -s --fail http://localhost:3001/health || exit 1"
                  --health-interval 5s
                  --health-timeout 5s
                  --health-retries 3
            persist:
                image: nangohq/nango-persist:${{ github.event.pull_request.head.sha || github.sha }}
                env:
                    NANGO_PERSIST_PORT: 3002
                ports:
                  - 3002:3002
                options: >-
                  --health-cmd "curl -s --fail http://localhost:3002/health || exit 1"
                  --health-interval 5s
                  --health-timeout 5s
                  --health-retries 3
            jobs:
                image: nangohq/nango-jobs:${{ github.event.pull_request.head.sha || github.sha }}
                env:
                    NANGO_JOBS_PORT: 3003
                ports:
                  - 3003:3003
                options: >-
                  --health-cmd "curl -s --fail http://localhost:3003/health || exit 1"
                  --health-interval 5s
                  --health-timeout 5s
                  --health-retries 3
            runner:
                image: nangohq/nango-runner:${{ github.event.pull_request.head.sha || github.sha }}
                ports:
                  - 3006:3006
                options: >-
                  --health-cmd "curl -s --fail http://localhost:3006/health || exit 1"
                  --health-interval 5s
                  --health-timeout 5s
                  --health-retries 3

        runs-on: ubuntu-latest
        steps:
            - name: Test server
              run: |
                exit $(curl -sS http://localhost:3001/health | grep -q "{.result.:.ok.}")
            - name: Test persist
              run: |
                exit $(curl -sS http://localhost:3002/health | grep -q "{.status.:.ok.}")
            - name: Test jobs
              run: |
                exit $(curl -sS http://localhost:3003/health | grep -q "{.status.:.ok.}")
            - name: Test runner
              run: |
                exit $(curl -sS http://localhost:3006/health | grep -q "{.status.:.ok.}")
